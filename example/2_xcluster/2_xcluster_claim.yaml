# example/claim-eks.yaml
apiVersion: segoja7.example/v1alpha1
kind: XCLUSTER
metadata:
  name: xcluster-example-segoja7
spec:
  id: xcluster-example-segoja7
  region: us-east-1
  providerConfigName: segoja7
  tags:
    owner: "platform-team"
    environment: "development"
    project: "proyecto"
    managed-by: "crossplane"
  accountId: "476114125818"
  encryptCluster: false
  authenticationMode: "API_AND_CONFIG_MAP"
  logging:
    - "api" 
    - "audit"
    - "authenticator"
    - "controllerManager"
    - "scheduler"
  endpointPublicAccess: true
  endpointPrivateAccess: true
  publicAccessCidrs: 
    - "0.0.0.0/0"
  networkId: "xnetwork-example"
  clusterVersion: "1.33"
  nodeGroup:
    amiType: "BOTTLEROCKET_ARM_64"
    capacityType: "ON_DEMAND"
    diskSize: 20
    instanceTypes: 
     - "t4g.large"
    minSize: 1
    maxSize: 3
    desiredSize: 1
    updateConfig:
      maxUnavailablePercentage: 25
      force: true
  addons:
   - name: eks-pod-identity-agent
     version: "v1.3.8-eksbuild.2"
     resolveConflicts: "OVERWRITE"
   - name: vpc-cni
    #  version: "latest"
     resolveConflicts: "OVERWRITE"
   - name: coredns
    #  version: "latest"
     resolveConflicts: "OVERWRITE"
   - name: kube-proxy
    #  version: "latest"
     resolveConflicts: "OVERWRITE"
  hostedZoneID: "Z084056021QR5BJUSPGN7"
  domainNames: 
   - "*.segoja7.com"
  certificateSecretName: "ssl-wildcard-idp"
  helmAddonsConfig:
    - name: ingress-nginx
      chart: "ingress-nginx"
      repository: "https://kubernetes.github.io/ingress-nginx"
      version: "4.13.3"
      namespace: ingress-nginx
      createNamespace: true
      values:
        controller:
          ingressClassResource:
            name: "nginx"
            default: true
            controllerValue: "k8s.io/ingress-nginx"
          service:
            type: LoadBalancer
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-name: "ingress-idp"
              service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
              service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    - name: external-dns
      chart: "external-dns"
      repository: "https://kubernetes-sigs.github.io/external-dns/"
      version: "1.19.0"
      namespace: external-dns
      createNamespace: true
      values:
        replicaCount: 2
        rbac:
          create: true
        installCRDs: true
        serviceAccount:
          create: true
          name: "external-dns"
        webhook:
          port: 9443
        automountServiceAccountToken: true
        provider:
          name: "aws"
        aws:
          region: "us-east-1"
          zoneType: "public"
        interval: "1m"
        policy: "sync"
        registry: "txt"
        sources: 
          - "service"
          - "ingress"
        metrics:
          enabled: false
          serviceMonitor:
            enabled: false
        podDisruptionBudget:
          minAvailable: 1
      serviceAccountName: external-dns
      customPolicy: |
        {
        "Version": "2012-10-17",
        "Statement": [
            {
            "Effect": "Allow",
            "Action": [
                "route53:ChangeResourceRecordSets",
                "route53:ListResourceRecordSets",
                "route53:ListTagsForResources"
            ],
            "Resource": [
                "arn:aws:route53:::hostedzone/*"
            ]
            },
            {
            "Effect": "Allow",
            "Action": [
                "route53:ListHostedZones"
            ],
            "Resource": [
                "*"
            ]
            }
        ]
        }
    - name: cert-manager
      chart: "cert-manager"
      repository: "oci://quay.io/jetstack/charts"
      version: "v1.19.0"
      namespace: cert-manager
      createNamespace: true
      values:
        crds:
          enabled: true
        webhook:
          timeoutSeconds: 30
          securePort: 10251
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 128Mi
        startupapicheck:
          enabled: true
          timeout: "5m"
          backoffLimit: 6
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 128Mi
        dns01RecursiveNameservers: "8.8.8.8:53"
        dns01RecursiveNameserversOnly: true
        extraArgs:
          - --dns01-recursive-nameservers-only
          - --dns01-recursive-nameservers=8.8.8.8:53
      serviceAccountName: cert-manager
      customPolicy: |
        {
        "Version": "2012-10-17",
        "Statement": [
            {
            "Effect": "Allow",
            "Action": "route53:GetChange",
            "Resource": "arn:aws:route53:::change/*"
            },
            {
            "Effect": "Allow",
            "Action": [
                "route53:ChangeResourceRecordSets",
                "route53:ListResourceRecordSets"
            ],
            "Resource": "arn:aws:route53:::hostedzone/*",
            "Condition": {
                "ForAllValues:StringEquals": {
                "route53:ChangeResourceRecordSetsRecordTypes": ["TXT"]
                }
            }
            },
            {
            "Effect": "Allow",
            "Action": "route53:ListHostedZonesByName",
            "Resource": "*"
            }
        ]
        }
    - name: reflector
      chart: "reflector"
      repository: "https://emberstack.github.io/helm-charts" #for cert-manager wildcard.
      version: "9.1.34"
      namespace: reflector
      createNamespace: true