# example/claim-eks.yaml
apiVersion: segoja7.example/v1alpha1
kind: XCLUSTER
metadata:
  name: xcluster-example-segoja7
spec:
  id: xcluster-example-segoja7
  region: us-east-1
  providerConfigName: segoja7
  tags:
    owner: "platform-team"
    environment: "development"
    project: "proyecto"
    managed-by: "crossplane"
  accountId: "476114125818"
  encryptCluster: false
  authenticationMode: "API_AND_CONFIG_MAP"
  logging:
    - "api" 
    - "audit"
    - "authenticator"
    - "controllerManager"
    - "scheduler"
  endpointPublicAccess: true
  endpointPrivateAccess: true
  publicAccessCidrs: 
    - "0.0.0.0/0"
  networkId: "xnetwork-example"
  clusterVersion: "1.33"
  nodeGroup:
    amiType: ""
    capacityType: "ON_DEMAND"
    diskSize: 20
    instanceTypes: 
     - "t3.medium"
    minSize: 1
    maxSize: 3
    desiredSize: 1
    updateConfig:
      maxUnavailablePercentage: 25
      force: true
  addons:
   - name: eks-pod-identity-agent
     version: "v1.3.8-eksbuild.2"
     resolveConflicts: "OVERWRITE"
   - name: vpc-cni
    #  version: "latest"
     resolveConflicts: "OVERWRITE"
   - name: coredns
    #  version: "latest"
     resolveConflicts: "OVERWRITE"
   - name: kube-proxy
    #  version: "latest"
     resolveConflicts: "OVERWRITE"
  helmAddonsConfig:
    - name: cert-manager
      chart: "cert-manager"
      repository: "https://charts.jetstack.io"
      version: "v1.18.2"
      namespace: cert-manager
      createNamespace: true
      values:
        crds:
          enabled: true
        extraArgs:
          - --dns01-recursive-nameservers-only
          - --dns01-recursive-nameservers=8.8.8.8:53
        # serviceAccount:
        #   annotations:
        #     eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/sa-cert-manager-PROJECT_NAME"
      serviceAccountName: cert-manager
      customPolicy: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "route53:ChangeResourceRecordSets",
                "route53:ListResourceRecordSets"
              ],
              "Resource": "arn:aws:route53:::hostedzone/*"
            },
            {
              "Effect": "Allow", 
              "Action": "route53:ListHostedZonesByName",
              "Resource": "*"
            }
          ]
        }

